local tweener = require("tweener.tweener")

function init(self)
	local text_score = gui.get_node("text_score")

	local tween_text = tweener.tween(gui.EASING_OUTCIRC, 0, 9999, 2.4, function(value, is_final_call)
		gui.set_text(text_score, "Score: " .. math.floor(value))

		if is_final_call then
			gui.set_scale(text_score, vmath.vector3(1.25, 1.25, 1))
			gui.animate(text_score, "scale", vmath.vector3(1, 1, 1), gui.EASING_OUTBOUNCE, 0.5)
		end
	end)

	print("Easing Outsine 0-100, 0%", tweener.ease(gui.EASING_OUTSINE, 0, 100, 1, 0))
	print("Easing Outsine 0-100, 25%", tweener.ease(gui.EASING_OUTSINE, 0, 100, 1, 0.25))
	print("Easing Outsine 0-100, 50%", tweener.ease(gui.EASING_OUTSINE, 0, 100, 1, 0.5))
	print("Easing Outsine 0-100, 75%", tweener.ease(gui.EASING_OUTSINE, 0, 100, 1, 0.75))
	print("Easing Outsine 0-100, 100%", tweener.ease(gui.EASING_OUTSINE, 0, 100, 1, 1))

	local box = gui.get_node("box")
	local box_pos = gui.get_position(box)

	local current_time = socket.gettime()
	local custom_easing = {0, 0.4, 0.5, 0.6, 0.5, 0.4, 0.5, 0.6, 1}
	local tween_box = tweener.tween(custom_easing, 75, 885, 2.4, function(value, is_final_call)
		box_pos.x = value
		gui.set_position(box, box_pos)

		if is_final_call then
			print("Tween took", socket.gettime() - current_time)
			gui.set_scale(box, vmath.vector3(1.25, 1.25, 1))
			gui.animate(box, "scale", vmath.vector3(1, 1, 1), gui.EASING_OUTBOUNCE, 0.5)
		end
	end)

	timer.delay(1, false, function()
		tweener.set_pause(tween_box, true)
		tweener.set_pause(tween_text, true)

	end)

	timer.delay(2, false, function()
		tweener.set_pause(tween_box, false)
		tweener.set_pause(tween_text, false)
	end)
end
